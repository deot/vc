@use '../style/helper' as *;

$component-name: vc-button;

/**
 * 可配制的主题色提取, Button可单独配置，默认使用全局值
 */
$background-color-light: varfix(background-color-light, button);
$color-light: varfix(color-light, button);
$color-light-deep: varfix(color-light-deep, button);
$color-light-deeper: varfix(color-light-deeper, button);
$color-dark: varfix(color-dark, button);
$color-dark-light: varfix(color-dark-light, button);
$color-primary: varfix(color-primary, button);
$color-primary-light: varfix(color-primary-light, button);
$color-success: varfix(color-success, button);
$color-success-light: varfix(color-success-light, button);
$color-error: varfix(color-error, button);
$color-error-light: varfix(color-error-light, button);
$color-warning: varfix(color-warning, button);
$color-warning-light: varfix(color-warning-light, button);
$color-disabled: varfix(color-disabled, button);
$color-disabled-light: varfix(color-disabled-light, button);


@include block($component-name) {
	padding: unitfix(5) unitfix(16);
	font-size: unitfix(13);
	font-weight: 400;
	line-height: unitfix(20);
	cursor: pointer;
	background: $color-light;
	border: unitfix(1) solid transparent;
	border-color: $color-light-deeper;
	border-radius: unitfix(8);
	outline: 0 none !important;

	/**
	 * 外部v-show控制，主题变更会调用
	 */
	transition: color .2s linear, 
		background-color .2s linear,
		border .2s linear,
		box-shadow .2s linear;
	user-select: none;

	@include element(loading) {
		vertical-align: middle;
	}

	@include when(circle) {
		border-radius: unitfix(30);
	}

	@include when(long) {
		width: 100%;
	}

	@include when(default) {
		color: $color-dark;
		background-color: $color-light-deep;
		border-color: $color-light-deep;

		&:hover {
			color: $color-primary;
			border-color: $color-primary;
		}
	}

	@include when(primary) {
		color: themefrozen(color-light);
		background-color: $color-primary;
		border-color: $color-primary;

		&:hover {
			background-color: $color-primary-light;
			border-color: $color-primary-light;
		}
	}

	@include when(text) {
		color: $color-dark-light;
		background-color: transparent;
		border-color: transparent;

		&:hover {
			color: $color-primary-light;
		}
	}

	@include when(success) {
		color: themefrozen(color-light);
		background-color: $color-success;
		border-color: $color-success;

		&:hover {
			background-color: $color-success-light;
			border-color: $color-success-light;
		}
	}

	@include when(error) {
		color: themefrozen(color-light);
		background-color: $color-error;
		border-color: $color-error;

		&:hover {
			background-color: $color-error-light;
			border-color: $color-error-light;
		}
	}

	@include when(warning) {
		color: themefrozen(color-light);
		background-color: $color-warning;
		border-color: $color-warning;

		&:hover {
			background: $color-warning-light;
			border-color: $color-warning-light;
		}
	}

	@include when(disabled) {
		color: #374455;
		cursor: not-allowed;
		background-color: #C4C9D2;
		border-color: #C4C9D2;

		&:hover {
			background: #C4C9D2;
			border-color: #C4C9D2;
		}

		@include when(primary) {
			color: themefrozen(color-light);
			background-color: $color-primary-light;
			border-color: $color-primary-light;
		}
	}

	@include when(large) {
		padding: unitfix(8) unitfix(16);
		font-size: unitfix(14);
		border-radius: unitfix(8);

		@include when(circle) {
			border-radius: unitfix(36);
		}
	}

	@include when(small) {
		padding: unitfix(2) unitfix(8);
		font-size: unitfix(12);
		border-radius: unitfix(3);

		@include when(circle){
			border-radius: unitfix(24);
		}
	}

	@include when(alone) {
		& {
			@include when(round) {
				width: unitfix(30);
				height: unitfix(30);
				padding: 0;
				font-size: unitfix(13);
				border-radius: 50%;
			}

			@include when(large) {
				@include when(round) {
					width: unitfix(36);
					height: unitfix(36);
					padding: 0;
					font-size: unitfix(14);
					border-radius: 50%;
				}
			}

			@include when(small) {
				@include when(round) {
					width: unitfix(24);
					height: unitfix(24);
					padding: 0;
					font-size: unitfix(12);
					border-radius: 50%;
				}
			}
		}
	}
}