@use '../style/helper' as *;

$component-name: vc-input;
$background-color-light: varfix(background-color-light, input);
$color-light-extradeep: varfix(color-light-extradeep, input);
$color-primary: varfix(color-primary, input);
$color-primary-lighter: varfix(color-primary-lighter, input);
$color-dark-lighter: varfix(color-dark-lighter, input);
$color-dark-light: varfix(color-dark-light, input);
$color-dark-extralight: varfix(color-dark-extralight, input);
$color-light-deep: varfix(color-light-deep, input);
$foreground-color: varfix(foreground-color, input);
$color-disabled: varfix(color-disabled, input);

@include block($component-name) {
	position: relative;
	display: inline-block;
	width: 100%;
	min-height: unitfix(28);
	overflow: hidden;
	font-size: unitfix(12);
	line-height: 1.5;
	cursor: text;
	background-color: $background-color-light;
	border-radius: unitfix(4);
	transition: border .2s ease-in-out, 
		background .2s ease-in-out, 
		box-shadow .2s ease-in-out;

	@include border('', $color-light-extradeep, 4); // 不占边距

	@include when(focus) {
		&::after, &::before {
			border-color: $color-primary;
		}

		z-index: 2;
		box-shadow: 0 0 unitfix(1) unitfix(1) $color-primary-lighter;
	}

	&:hover {
		border-color: $color-primary;
	}

	@include when(disabled) {
		background: $color-disabled;
	}

	@include element(wrapper) {
		display: flex;
		flex: 1;
		align-items: center;
	}

	@include element(content){
		flex: 1;

		input {
			position: relative;
			width: 100%;
			padding: unitfix(5) unitfix(7); // 18 + 5 + 5 + 2 = 28
			font-family: inherit;
			font-size: inherit;
			line-height: inherit;
			color: $color-dark-light;
			background-color: unset;
			border: none;
			outline: 0;
			box-sizing: border-box;

			&::placeholder {
				color: $color-dark-extralight;
			}

			&::-webkit-search-cancel-button {
				display: none;
			}
		}

		@include when(disabled) {
			cursor: not-allowed;
			opacity: 1;

			input {
				color: $color-dark-extralight;
				cursor: not-allowed;
			}
		}
	}

	@include share-rule(input-icon) {
		width: unitfix(28);
		height: unitfix(28);
		font-size: unitfix(13);
		line-height: unitfix(28)!important;
		color: $color-dark-extralight;
		text-align: left;
	}

	/**
	 * clear
	 */
	@include element(icon-clear){
		@include extend-rule(input-icon);

		display: none;
		cursor: pointer;
	}

	@include pseudo(hover) {
		@include element(icon-clear){
			display: inline-block;
		}
	}
	
	@include share-rule(input-pend) {
		z-index: 0; // 让虚线在下方
		height: 100%;
		height: unitfix(28);
		font-size: unitfix(13);
		line-height: unitfix(28);
		text-align: center;
		white-space: nowrap;

		@include when(icon) {
			width: unitfix(16);
			font-size: unitfix(12);
			color: $foreground-color;
			background-color: $background-color-light;
		}

		@include when(disabled) {
			cursor: not-allowed;
			background-color: $color-disabled;
		}

		// 让虚线在下方
		@include when(afloat) {
			z-index: 3;
		}
	}

	/**
	 * prepend / append
	 */
	@include element(prepend) {
		@include extend-rule(input-pend);
	}

	@include element(append) {
		@include extend-rule(input-pend);
	}

	@include when(focus) {
		@include element(prepend) {
			z-index: 1;
		}

		@include element(append) {
			z-index: 1;
		}
	}

	// 计数
	@include element(indicator) {
		top: 0;
		z-index: 1;
		font-size: unitfix(12);
		line-height: unitfix(28);
		color: $color-dark-extralight;

		@include when(in) {
			margin-right: 8px;
		}

		@include when(out) {
			position: absolute;
			right: unitfix(-6);
			transform: translateX(100%);
		}
	}
}